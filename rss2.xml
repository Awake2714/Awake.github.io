<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Awake&#39;s Blog</title>
    <link>http://yoursite.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Tue, 03 Sep 2019 14:26:59 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>pyppeteer</title>
      <link>http://yoursite.com/2019/09/03/41_pypetter/</link>
      <guid>http://yoursite.com/2019/09/03/41_pypetter/</guid>
      <pubDate>Tue, 03 Sep 2019 13:12:03 GMT</pubDate>
      <description>
      
        &lt;p&gt;今天发现了一个很厉害的东西，Puppeteer和pyppeteer&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>今天发现了一个很厉害的东西，Puppeteer和pyppeteer<a id="more"></a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>puppeteer是Google基于Node.js开发的一个工具，有了它可以通过JavaScript来控制Chrome浏览器的一些操作。而pyppeteer是基于puppeteer对python版本功能的实现。有点像selenium进行自动化操作，具有以下功能：</p><ul><li>生成页面的截图和PDF。</li><li>抓取SPA(单页应用程序)并渲染页面</li><li>自动提交表单，UI测试，键盘输入等。</li><li>创建一个最新的自动化测试环境，使用最新的JavaScript和浏览器特性，在最新版本的Chrome中直接运行测试。</li><li>捕捉异常跟踪堆栈来帮助诊断性能问题。</li><li>测试Chrome扩展</li><li>其他：js注入、模拟操作、异步执行、伪装</li></ul><h2 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h2><ol><li>下载 Nodejs：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a>  node版本至少v6.4.0</li><li>安装 puppeteer： <code>npm i puppeteer</code></li><li>安装 chromium：<a href="https://npm.taobao.org/mirrors/chromium-browser-snapshots" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/chromium-browser-snapshots</a></li><li>安装 pyppeteer：<code>pip install pyppeteer</code></li><li>测试是否安装好了：<br>建立一个tmp.js文件，将以下代码copy到文件中，执行<code>node tmp.js</code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> puppeteer = <span class="built_in">require</span>(<span class="string">'puppeteer'</span>);</span><br><span class="line">(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line"><span class="keyword">const</span> browser = <span class="keyword">await</span> puppeteer.launch(&#123;<span class="attr">headless</span>:<span class="literal">false</span>&#125;);</span><br><span class="line"><span class="keyword">const</span> page = <span class="keyword">await</span> browser.newPage();</span><br><span class="line"><span class="keyword">await</span> page.goto(<span class="string">'https://example.com'</span>);</span><br><span class="line"><span class="keyword">await</span> page.screenshot(&#123;<span class="attr">path</span>: <span class="string">'example.png'</span>&#125;);</span><br><span class="line"><span class="keyword">await</span> browser.close();</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure></li></ol><h2 id="官方示例-demo-py"><a href="#官方示例-demo-py" class="headerlink" title="官方示例 demo.py"></a>官方示例 demo.py</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">from</span> pyppeteer <span class="keyword">import</span> launch</span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">browser = <span class="keyword">await</span> launch(&#123;<span class="string">'headless'</span>:<span class="literal">False</span>,</span><br><span class="line"><span class="string">'executablePath'</span>:<span class="string">'/MAC/Study/27.Puppeteer/node_modules/puppeteer/.local-chromium/mac-609904/chrome-mac/Chromium.app/Contents/MacOS/Chromium'</span>&#125;)</span><br><span class="line">page = <span class="keyword">await</span> browser.newPage()</span><br><span class="line"><span class="keyword">await</span> page.goto(<span class="string">'http://example.com'</span>)</span><br><span class="line"><span class="keyword">await</span> page.screenshot(&#123;<span class="string">'path'</span>:<span class="string">'example.png'</span>&#125;)</span><br><span class="line"><span class="keyword">await</span> browser.close()</span><br><span class="line">asyncio.get_event_loop().run_until_complete(main())</span><br></pre></td></tr></table></figure><h2 id="初步使用"><a href="#初步使用" class="headerlink" title="初步使用"></a>初步使用</h2><p>开始学习pyppeteer，我用它模拟登陆了豆瓣，代码如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">from</span> pyppeteer <span class="keyword">import</span> launch</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">browser = <span class="keyword">await</span> launch(&#123;</span><br><span class="line"><span class="string">'headless'</span>:<span class="literal">False</span>,</span><br><span class="line"><span class="string">'autoClose'</span>: <span class="literal">False</span>,     <span class="comment">#设置底部和右侧的空白区域</span></span><br><span class="line"><span class="string">'args'</span>: [<span class="string">'-no-sandbox'</span>, <span class="string">'-window-size=1366,850'</span>],</span><br><span class="line"><span class="string">'slowMo'</span>: <span class="number">5</span></span><br><span class="line">&#125;)</span><br><span class="line">page = <span class="keyword">await</span> browser.newPage()</span><br><span class="line"><span class="keyword">await</span> page.setViewport(&#123;<span class="string">'width'</span>: <span class="number">1366</span>, <span class="string">'height'</span>: <span class="number">768</span>&#125;)   <span class="comment">#设置窗口大小</span></span><br><span class="line"><span class="keyword">await</span> page.goto(<span class="string">'https://accounts.douban.com/passport/login'</span>)   <span class="comment">#请求url</span></span><br><span class="line"><span class="keyword">await</span> page.click(<span class="string">'.account-tab-account'</span>)   <span class="comment">#点击某元素</span></span><br><span class="line"><span class="keyword">await</span> page.type(<span class="string">'#username'</span>, <span class="string">'12345135112'</span>)   <span class="comment">#点击某元素并输入内容</span></span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line"><span class="keyword">await</span> page.type(<span class="string">'#password'</span>, <span class="string">'afq12143vr'</span>)</span><br><span class="line"><span class="keyword">await</span> page.click(<span class="string">'.account-form &gt; .account-form-field-submit '</span>)</span><br><span class="line"><span class="keyword">await</span> page.waitFor(<span class="number">3000</span>)   <span class="comment">#设置页面等待时间</span></span><br><span class="line"><span class="keyword">await</span> page.screenshot(&#123;<span class="string">'path'</span>:<span class="string">'example.png'</span>&#125;)   <span class="comment">#截屏</span></span><br><span class="line"><span class="comment"># await page.evaluate('window.scrollTo(0,document.body.scrollHeight)')   #拖动滚轮</span></span><br><span class="line"><span class="comment"># await page.pdf(path='./exm.pdf')</span></span><br><span class="line"><span class="comment"># await browser.close()</span></span><br><span class="line"></span><br><span class="line">asyncio.get_event_loop().run_until_complete(main())</span><br></pre></td></tr></table></figure></p><ul><li>newPage()：生成一个新的对象，相当于再打开一个标签页</li><li>setViewport()：设置窗口大小，传入一个字典</li><li>goto()：请求url</li><li>click()：点击某个元素</li><li>type()：找到某个元素，并输入文本，接收选择器和传入的文本</li><li>waitFor()：设置页面等待时间</li><li>screenshot()：截屏</li><li>evaluate()：注入js代码</li><li>pdf()：将页面内容保存为pdf格式</li><li>close()：关闭浏览器</li></ul><p>今天就简单地了解了一下pyppeteer，明天继续学习啊！加油加油，争取月薪过万<br>今天小舒也要十分努力芽~</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/09/03/41_pypetter/#disqus_thread</comments>
    </item>
    
    <item>
      <title>今天小舒也要十分努力呀</title>
      <link>http://yoursite.com/2019/08/25/40_%E4%BB%8A%E5%A4%A9%E5%B0%8F%E8%88%92%E4%B9%9F%E8%A6%81%E5%8D%81%E5%88%86%E5%8A%AA%E5%8A%9B%E5%91%80/</link>
      <guid>http://yoursite.com/2019/08/25/40_%E4%BB%8A%E5%A4%A9%E5%B0%8F%E8%88%92%E4%B9%9F%E8%A6%81%E5%8D%81%E5%88%86%E5%8A%AA%E5%8A%9B%E5%91%80/</guid>
      <pubDate>Sun, 25 Aug 2019 15:04:06 GMT</pubDate>
      <description>
      
        &lt;p&gt;我觉得一点小事就能让人很开心&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>我觉得一点小事就能让人很开心<a id="more"></a><br>比如，突然接到很久没联系的室友的视频电话，和331聊了好久好久，一上班就会很怀念学校的日子，宿舍的时光真的让人十分怀念呀<br>所以，小舒想通了，放不下的就慢慢放下，不要去在意他，然后继续努力，重振旗鼓，加油↖(^ω^)↗<br>今天学了一丢丢的Django，我的妈呀，光是视频我都看了几遍了，可还是没学会，又去学了前端，现在俺又回来了，希望这次能够好好学了！</p><h1 id="文件目录："><a href="#文件目录：" class="headerlink" title="文件目录："></a>文件目录：</h1><blockquote></blockquote><pre><code>mysite    mysite        \__init__.py        settings.py        urls.py        wsgi.py    manage.py    template    static</code></pre><h1 id="Django的创建步骤："><a href="#Django的创建步骤：" class="headerlink" title="Django的创建步骤："></a>Django的创建步骤：</h1><ol><li>可以通过命令或者pycharm创建<br><code>django-admin startproject mysite</code></li><li>修改配置文件，有三个地方需要修改</li></ol><ul><li>模板<br><code>TEMPLATES：&#39;DIRS&#39;: [os.path.join(BASE_DIR, &#39;templates&#39;)]</code></li><li>静态文件：<br><code>STATICFILES_DIRS = (  os.path.join(BASE_DIR, &#39;static&#39;),)</code></li><li>MIDDLEWARE<br>注释<br><code># &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,</code></li></ul><ol start="3"><li>路由<br><code>from django.shortcuts import HttpResponse, render, redirect</code><br>函数参数：<br>request<br> request.method<br> request.GET<br> request.POST<br>函数返回值：</li></ol><ul><li>HttpResponse：返回一个字符串</li><li>redirect：重定向，一个url</li><li>render：第一个参数为request，第二参数为模板，第三个参数可选，向模板传递的参数<br>模板渲染：<br>特殊字符的使用</li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/08/25/40_%E4%BB%8A%E5%A4%A9%E5%B0%8F%E8%88%92%E4%B9%9F%E8%A6%81%E5%8D%81%E5%88%86%E5%8A%AA%E5%8A%9B%E5%91%80/#disqus_thread</comments>
    </item>
    
    <item>
      <title>堕落的八月</title>
      <link>http://yoursite.com/2019/08/25/39_%E5%85%AB%E6%9C%88/</link>
      <guid>http://yoursite.com/2019/08/25/39_%E5%85%AB%E6%9C%88/</guid>
      <pubDate>Sun, 25 Aug 2019 08:32:17 GMT</pubDate>
      <description>
      
        &lt;p&gt;今天又是8月25号了，不知不觉，又过去这么久了，又接近了八月的尾声。&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>今天又是8月25号了，不知不觉，又过去这么久了，又接近了八月的尾声。<a id="more"></a><br>八月，仿佛发生了很多事，不过好多都是不开心的事。<br>八月，和小野度过了我的21岁生日；八月，适应了每天坐四个小时的车上下班；八月，弟弟回老家了；八月，从五楼搬到了六楼；八月，大概和方敏见了最后一面。<br>八月也不全是不开心，算是有得有失吧。<br>因为上班每天都得坐四个小时的车，搞得我郁郁寡欢，可是小野来了，她来了，真的解救了我，心里好很多了。<br>因为爸妈经常吵架，妈妈经常因为一点小事就骂弟弟，所以弟弟受不了，独自回家了，回到了那个我喜欢的脏兮兮的老房子。<br>因为部门人太多，因为我们是实习生，所以我们从五楼搬到了六楼，虽然我也安慰自己楼上挺好的，还没有领导，可就是有一种被抛弃的感觉，不开心。<br>因为方敏要去实习了，很远很远的地方，所以在她走之前，我们见了最后一面，我们一起睡觉，聊了好久，有一个人陪你聊天、让你真正的开心，这种感觉真的很好。<br>因为心动了，八月变成了柠檬精女孩，好羡慕人家甜甜的恋爱，可是听说人的一生会遇到很多心动的人，可能会误以为那是喜欢，其实也不过是某一刻的好感，可毕竟心动不是答案，心定才是。<br>可能是因为上班了，聊天的人变少了，所以感到快乐的时候也少了，是不是长大就是这样啊。我不想长大，长大没有红包，没有疼爱，连快乐都没有，我不想长大。我也不想努力，不想去想那么多，我也想和其他女孩纸一样，天真无邪，什么都不用管。<br>可生活还是要继续啊，你还是要长大啊，你还是要努力啊，真想从明天开始，莫谈爱情，继续学习！<br>总之，八月是一个随便听一首歌都想放声大哭的日子。</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/08/25/39_%E5%85%AB%E6%9C%88/#disqus_thread</comments>
    </item>
    
    <item>
      <title>jquery事件</title>
      <link>http://yoursite.com/2019/08/10/38_jquery%E4%BA%8B%E4%BB%B6/</link>
      <guid>http://yoursite.com/2019/08/10/38_jquery%E4%BA%8B%E4%BB%B6/</guid>
      <pubDate>Sat, 10 Aug 2019 10:54:03 GMT</pubDate>
      <description>
      
        &lt;p&gt;事件分类&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>事件分类<a id="more"></a></p><h2 id="鼠标事件"><a href="#鼠标事件" class="headerlink" title="鼠标事件"></a>鼠标事件</h2><ul><li>click</li><li>dbclick</li><li>mouseenter</li><li>mouseleave</li><li><p>hover</p><pre><code>&lt;button class=&quot;btn&quot;&gt;点击&lt;/button&gt;&lt;script type=&quot;text/javascript&quot;&gt;    $(document).ready(function(){        $(&apos;button.btn&apos;).click(function(){            alert(&apos;点击事件&apos;);        })    })&lt;/script&gt;</code></pre></li></ul><h2 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h2><ul><li>keypress</li><li>keydown</li><li>keyup</li></ul><h2 id="表单事件"><a href="#表单事件" class="headerlink" title="表单事件"></a>表单事件</h2><ul><li>submit</li><li>change</li><li>focus</li><li>blur</li></ul><h2 id="文档-窗口事件"><a href="#文档-窗口事件" class="headerlink" title="文档/窗口事件"></a>文档/窗口事件</h2><ul><li>load</li><li>unload</li><li>resize</li><li>scroll</li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/08/10/38_jquery%E4%BA%8B%E4%BB%B6/#disqus_thread</comments>
    </item>
    
    <item>
      <title>jquery选择器</title>
      <link>http://yoursite.com/2019/08/10/37_jquery%E9%80%89%E6%8B%A9%E5%99%A8/</link>
      <guid>http://yoursite.com/2019/08/10/37_jquery%E9%80%89%E6%8B%A9%E5%99%A8/</guid>
      <pubDate>Sat, 10 Aug 2019 10:42:03 GMT</pubDate>
      <description>
      
        &lt;p&gt;jquery选择器和js选择器类似，主要分为：&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>jquery选择器和js选择器类似，主要分为：<a id="more"></a></p><ul><li>基本选择器</li><li>层级选择器</li><li>属性选择器</li><li>过滤选择器</li><li>筛选选择器</li></ul><p>以下代码适用于下面所有示例</p><pre><code>&lt;div class=&quot;box&quot;&gt;&lt;/div&gt;&lt;div class=&quot;box2&quot;&gt;&lt;/div&gt;&lt;div id=&quot;content&quot;&gt;    &lt;ul&gt;        &lt;li&gt;html&lt;/li&gt;        &lt;li&gt;javascript&lt;/li&gt;        &lt;li&gt;jquery&lt;/li&gt;    &lt;/ul&gt;&lt;/div&gt;&lt;p&gt;JQUERY&lt;/p&gt;&lt;input type=&quot;text&quot; name=&quot;user&quot;&gt;&lt;input type=&quot;password&quot; name=&quot;pwd&quot;&gt;</code></pre><h2 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h2><ul><li>id选择器 #</li><li>类选择器 .</li><li>标签选择器 Element</li><li>并集选择器 ,</li><li><p>通配符选择器 *</p><pre><code>// 类选择器console.log($(&apos;.box&apos;));// id选择器console.log($(&apos;#content&apos;));// 并集选择器console.log($(&apos;div,p&apos;));</code></pre></li></ul><h2 id="层级选择器"><a href="#层级选择器" class="headerlink" title="层级选择器"></a>层级选择器</h2><ul><li>后代选择器  (空格)</li><li>子代选择器 &gt;</li><li>紧邻选择器 +</li><li><p>兄弟选择器 ~</p><pre><code>// 后代选择器console.log($(&apos;#content ul&apos;));// 子代选择器console.log($(&apos;ul&gt;li&apos;));// 紧邻选择器console.log($(&apos;.box+div&apos;));// 兄弟选择器console.log($(&apos;.box~div&apos;));</code></pre></li></ul><h2 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h2><pre><code>console.log($(&apos;input[type=&quot;text&quot;]&apos;));  //选取所有type为text的input标签console.log($(&apos;*[class]&apos;))  // 选取所有带有class属性的元素</code></pre><h2 id="基本过滤选择器"><a href="#基本过滤选择器" class="headerlink" title="基本过滤选择器"></a>基本过滤选择器</h2><ul><li>:eq(index) 匹配的索引为index的元素</li><li>:first() 匹配的第一个元素</li><li>:last() 匹配的最后一个元素</li><li>:gt() 大于xxx</li><li>:lt() 小于xxx</li><li>:odd() 索引为奇数</li><li>:even() 索引为偶数</li><li><p>:not(selector) 除selector以外的元素</p><pre><code>// :eq(index)选取索引为index的元素console.log($(&apos;ul&gt;li:eq(2)&apos;).text());// :first()选择匹配的第一个元素console.log($(&apos;ul&gt;li:first()&apos;).text());// :last()选择匹配的最后一个元素console.log($(&apos;div:last()&apos;));</code></pre></li></ul><h2 id="筛选选择器"><a href="#筛选选择器" class="headerlink" title="筛选选择器"></a>筛选选择器</h2><ul><li>find() 查找指定元素的后代元素</li><li>parent() 查找直接父元素</li><li>children() 所有子代元素</li><li>siblings() 所有兄弟元素</li><li><p>eq(index) 索引为index的元素</p><pre><code>// find()查找指定元素所有的后代元素console.log($(&apos;body&apos;).find(&apos;div&apos;));  // 查找body的所有div后代标签// children()查找指定元素所有的子代元素console.log($(&apos;body&apos;).children());  //查找body的所有直接子元素// siblings()查找所有的兄弟元素console.log($(&apos;#content&apos;).siblings(&apos;input&apos;));  // 查找id为content的兄弟元素为input的所有元素// parent()查找父元素console.log($(&apos;li&apos;).parent());// eq(index)查找匹配的索引为index的元素console.log($(&apos;li&apos;).eq(2));</code></pre></li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/08/10/37_jquery%E9%80%89%E6%8B%A9%E5%99%A8/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
